name: Build and Image Creation

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Webapp Build and Image Creation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Create instance template'
        run: |
          gcloud compute instance-groups managed rolling-action start-update appserver-igm \
          --region=us-central1 \
          --version=template=instance-template-20240409-083112 \
          --type=opportunistic

#        run: |
#          gcloud --quiet components install beta
#          gcloud beta compute instance-templates create instance-template-20240409-083112 \
#          --project=tf-gcp-infra-27 \
#          --machine-type=e2-small \
#          --network-interface=network-tier=PREMIUM,subnet=webapp \
#          --region=us-central1 \
#          --metadata=startup-script="#!/bin/bash$'\n'echo \"DATABASE_HOST=10.64.0.5\" >> /home/csye6225/cloud/webapp/config/.env$'\n'echo \"DATABASE_USER=dev-1\" >> /home/csye6225/cloud/webapp/config/.env$'\n'echo \"DATABASE_PASSWORD=SK%QsF6QfQB7zkcO\" >> /home/csye6225/cloud/webapp/config/.env$'\n'echo \"PROJECT_ID=tf-gcp-infra-27\" >> /home/csye6225/cloud/webapp/config/.env$'\n'echo \"DOMAIN_NAME=sourabhk.com\" >> /home/csye6225/cloud/webapp/config/.env$'\n'/home/csye6225/cloud/webapp/setup.sh /home/csye6225/cloud/webapp$'\n'rm -rf /var/log/myapp/app.log$'\n'rm -rf /home/csye6225/cloud/webapp/LICENSE /home/csye6225/cloud/webapp/packer/ /home/csye6225/cloud/webapp/README.md /home/csye6225/cloud/webapp/requirements/ /home/csye6225/cloud/webapp/.gitignore$'\n'touch /home/csye6225/cloud/workdone" \
#          --maintenance-policy=MIGRATE \
#          --provisioning-model=STANDARD \
#          --service-account=my-vm-sa@tf-gcp-infra-27.iam.gserviceaccount.com \
#          --scopes=https://www.googleapis.com/auth/cloud-platform \
#          --tags=my-compute-instance \
#          --create-disk=auto-delete=yes,boot=yes,device-name=instance-template-20240409-083112,image=projects/tf-gcp-infra-27/global/images/my-webapp-2024-04-03-09-00-50,kms-key=projects/tf-gcp-infra-27/locations/us-central1/keyRings/key-ring-3/cryptoKeys/cmek-vm-key,mode=rw,size=20,type=pd-standard \
#          --no-shielded-secure-boot \
#          --no-shielded-vtpm \
#          --no-shielded-integrity-monitoring \
#          --reservation-affinity=any

#      - uses: actions/checkout@v3
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Google auth
#        uses: google-github-actions/auth@v2
#        with:
#          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
#
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@v2
#
#      - name: Use gcloud CLI
#        run: gcloud info
#
#      - name: Zip creation
#        run: |
#          mkdir -p app_artifact
#          mkdir -p requirements
#          cp packer/scripts/requirements.txt requirements || exit 1
#          zip -r webapp.zip . -x ".git/*" ".github/*" || exit 1
#          mv webapp.zip app_artifact || exit 1
#
#      - name: Setup `packer`
#        uses: hashicorp/setup-packer@main
#        id: setup
#        with:
#          version: "latest"
#
#      - name: Format Packer template
#        run: |
#          cd packer
#          output=$(packer fmt -check .)
#          if [ -n "$output" ]; then
#            echo "$output"
#            exit 1
#          fi
#
#      - name: Build app image
#        run: |
#          cd packer
#          packer init webapp.pkr.hcl
#          packer validate -var='gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' -var='mysql_user_password=${{ secrets.DB_USER_PASSWORD }}' -var='mysql_root_password=${{ secrets.DB_ROOT_PASSWORD }}' webapp.pkr.hcl
#          packer build -var='gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' -var='mysql_user_password=${{ secrets.DB_USER_PASSWORD }}' -var='mysql_root_password=${{ secrets.DB_ROOT_PASSWORD }}' webapp.pkr.hcl || exit 1
#
#      - name: Report status
#        if: always()
#        run: |
#          echo "Build completed successfully!"
